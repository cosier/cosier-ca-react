#########################################
# Client Nginx Configuration
daemon off;

# include /barge/lib/lua/lib/config/envs.conf;

worker_processes 1;
worker_rlimit_nofile 2048;

pid ${APP_ROOT}/tmp/client.nginx.pid;

events {
  worker_connections   64;
}

http {
  gzip            on;
  gzip_min_length 1000;
  gzip_proxied    expired no-cache no-store private auth;
  gzip_types    text/plain application/javascript application/x-javascript text/javascript text/xml text/css;

  variables_hash_max_size 1024;

  error_log /dev/stdout ${LOG_LEVEL};
  access_log /dev/stdout;

  # init_by_lua_file /barge/lib/lua/lib/init/init_master.lua;
  # init_worker_by_lua_file /barge/lib/lua/lib/init/init_master.lua;

  ####################################################################
  # Client Server
  server {
    listen ${PORT};

    # lua_code_cache on;

    autoindex on;
    index index.html;

    root ${APP_ROOT}/dist;

    location /public {
      root ${APP_ROOT}/public;
      more_set_headers 'clientpublic: pubdir';
      try_files $uri $uri/ @public;
    }


    location / {
      # proxy_set_header  X-Real-IP        $remote_addr;
      # proxy_set_header  X-Forwarded-For  $proxy_add_x_forwarded_for;
      # proxy_set_header  Host             $http_host;
      # proxy_redirect    off;

      # if ($live_mode = true) {
        # proxy_pass        http://${NODE_SERVER_HOST}:${NODE_SERVER_PORT};
      # }

      more_set_headers 'clientroot: root';
      try_files $uri $uri/ @public;
    }

    location /__webpack_hmr {
        proxy_set_header  X-Real-IP        $remote_addr;
        proxy_set_header  X-Forwarded-For  $proxy_add_x_forwarded_for;
        proxy_set_header  Host             $http_host;
        proxy_redirect    off;
      more_set_headers 'clienthmr: webpack';
        proxy_pass        http://${NODE_SERVER_HOST}:${NODE_SERVER_PORT};
    }

    location @public {
      root ${APP_ROOT}/public;
      more_set_headers 'clientpub: public';
      try_files $uri $uri/ @404;
    }

    location @404 {
      more_set_headers 'client404: 404';
        rewrite (.*) / last;
    }

    location @ruby {
      proxy_set_header  X-Real-IP        $remote_addr;
      proxy_set_header  X-Forwarded-For  $proxy_add_x_forwarded_for;
      proxy_set_header  Host             $http_host;
      proxy_redirect    off;
      proxy_pass        http://${NODE_SERVER_HOST}:${NODE_SERVER_PORT};
    }

  }
}
